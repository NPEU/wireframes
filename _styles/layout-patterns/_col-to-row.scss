/*
    Col to Row
    (Single column to single row)

    The purpose of this pattern is to exhibit the following behaviour:

    * Self contained layout (no media queries so is context independent. Uses Fab Four width for
      a single breakpoint)

    * Below content breakpoint, there's a single column.
        [Optional: max-width for content, centered] - the reason for this is that for there to be
        enough space to adequately display the contents in a row the breakpoint would generally be
        quite wide - this may be too wide for a single item, so we need the option to restrict it's
        width.

    * Above content breakpoint, there's a single row. Each item needs to be of adequate width.

    * [Optional: gutter and bottom spacing]

*/
$col-to-row-namespace: l- !default;

$col-to-row-spacing-unit: 2rem !default;
$col-to-row-spacing-unit--small: ($col-to-row-spacing-unit / 2) !default;
$col-to-row-spacing-unit--large: ($col-to-row-spacing-unit * 2) !default;

/*
@mixin col-to-row-size ($width, $breakpoint) {

    .col-to-row
}
*/
.#{$col-to-row-namespace}col-to-row {

    &#{&} {
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;

        -webkit-flex-wrap: wrap;
            -ms-flex-wrap: wrap;
                flex-wrap: wrap;


        margin: 0;
        padding: 0;
        list-style-type: none;
    }


    // Add gutters:
    
    &#{&}--gutter--small {
        padding-top: $col-to-row-spacing-unit--small;
    }

    &#{&}--gutter--small,
    &#{&}--gutter--small > #{&}__item {
        padding-left: $col-to-row-spacing-unit--small / 2;
        padding-right: $col-to-row-spacing-unit--small / 2;
    }

    &#{&}--gutter--small > #{&}__item {
        padding-bottom: $col-to-row-spacing-unit--small;
    }



    &#{&}--gutter,
    &#{&}--gutter--medium {
        padding-top: $col-to-row-spacing-unit;
    }

    &#{&}--gutter,
    &#{&}--gutter > #{&}__item,
    &#{&}--gutter--medium,
    &#{&}--gutter--medium > #{&}__item {
        padding-left: $col-to-row-spacing-unit / 2;
        padding-right: $col-to-row-spacing-unit / 2;
    }

    &#{&}--gutter > #{&}__item,
    &#{&}--gutter--medium > #{&}__item {
        padding-bottom: $col-to-row-spacing-unit;
    }



    &#{&}--gutter--large {
        padding-top: $col-to-row-spacing-unit--large;
    }

    &#{&}--gutter--large,
    &#{&}--gutter--large > #{&}__item {
        padding-left: $col-to-row-spacing-unit--large / 2;
        padding-right: $col-to-row-spacing-unit--large / 2;
    }

    &#{&}--gutter--large > #{&}__item {
        padding-bottom: $col-to-row-spacing-unit--large;
    }

    // Add these classes to a wrapper if you want to flush the edge gutters:
    @at-root {
        #{&}--flush-edge-gutters {
            overflow: hidden;
        }
        
            #{&}--flush-edge-gutters &#{&}--gutter--small {
                margin: -$col-to-row-spacing-unit--small;
            }
            
            #{&}--flush-edge-gutters &#{&}--gutter,
            #{&}--flush-edge-gutters &#{&}--gutter--medium {
                margin: -$col-to-row-spacing-unit;
            }
            
            #{&}--flush-edge-gutters &#{&}--gutter--large {
                margin: -$col-to-row-spacing-unit--large;
            }
        

            #{&}__item {
                     -webkit-flex: 1;
                -ms-flex-positive: 1;
                        flex-grow: 1;

                -webkit-flex-shrink: 1;
                  -ms-flex-negative: 1;
                        flex-shrink: 1;

                     -webkit-flex-basis: auto;
                -ms-flex-preferred-size: auto;
                             flex-basis: auto;
            }
    }
}